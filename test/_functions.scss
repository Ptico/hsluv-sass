@use '../node_modules/sass-true' as *;

@import "../src/functions";

@include describe("from-linear") {
  @include it("should work") {
    @include assert-equal(from-linear(0.0001), 0.001292);
    @include assert-equal(from-linear(0.123), 0.3856017888563188);
    @include assert-equal(from-linear(12.3), 2.9467850436056042);
  }
}

@include describe("dot-product") {
  @include it("should work") {
    @include assert-equal(dot-product((2), (4)), 8);
    @include assert-equal(dot-product((1, 3), (4, 5)), 19);
    @include assert-equal(dot-product((5.23, 23.2, 1.2), (4.43, 5.42, 0.1)), 149.0329);
  }
}

@include describe("max-chroma-for-l-h") {
  @include it("should work") {
    @include assert-equal(max-chroma-for-l-h(12.4, 23.1), 27.278373488717314);
    @include assert-equal(max-chroma-for-l-h(0.4, 253), 0.77180722498895);
    @include assert-equal(max-chroma-for-l-h(4.4, 88.2), 4.864253310023044);
  }
}

@include describe("max-safe-chroma-for-l") {
  @include it("should work") {
    @include assert-equal(max-safe-chroma-for-l(12), 9.456750248530316);
    @include assert-equal(max-safe-chroma-for-l(1), 0.7880625207108596);
    @include assert-equal(max-safe-chroma-for-l(63.2), 49.805551308926326);
  }
}

@include describe("get-bounds") {
  @include it("should work") {
    @include assert-equal(get-bounds(10), ((-8.021739130434783, -63.70563018240983) (0.08726129137380577, -60.85087924830718) (1.3259649910233395, -36.49555417768104) (-0.025383977890972166, -61.34844034877459) (-0.12162162162162163, 11.091899201577185) (-0.007079328850638234, -56.69217925433503)));
    @include assert-equal(get-bounds(2), ((-8.021739130434781, -12.741126036481964) (0.017009692466172538, -12.17512222547033) (1.3259649910233395, -7.299110835536207) (-0.004915695567145192, -12.194400945198103) (-0.12162162162162163, 2.2183798403154364) (-0.001460308357579932, -12.00348299936154)));
    @include assert-equal(get-bounds(99), ((-8.021739130434781, -630.6857388058572) (108.51818322356918, -224.5129548058308) (1.3259649910233395, -361.30598635904227) (3.446083696490305, 24.709464627864566) (-0.12162162162162161, 109.80980209561412) (-0.10246288422125004, -2.434396476781836)));
  }
}

@include describe("length-of-ray-until-intersect") {
  @include it("should work") {
    @include assert-equal(length-of-ray-until-intersect(0.234, (2.43, 73.45)), null);
    @include assert-equal(length-of-ray-until-intersect(1.234, (2.43, 73.45)), 521.7064074364049);
    //    @include should(expect()), to(be-close-to(521.7064074364049, 8)));
  }
}

@include describe("intersect-line-line") {
  @include it("should work") {
    @include assert-equal(intersect-line-line((1.23, 3.45), (6.23, 3.11)), 0.06800000000000006);
  }
}

@include describe("distance-from-pole") {
  @include it("should work") {
    @include assert-equal(distance-from-pole((4.32, 5.23)), 6.783457820315537);
  }
}